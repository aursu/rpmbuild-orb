description: >
    Build Docker image and  upload it into Docker Hub
    Depends on environment variables
      DOCKER_USER
      DOCKER_PASS

parameters:
  file:
    type: string
    description: >
      Docker Compose file to use for Docker build image building

  service:
    type: string
    description: >
      Docker Compose service inside provided Docker Compose file

  shorttag:
    type: boolean
    default: true
    description: >
      Flag which used to enable/disable Docker images building
      prefixed with short OS version tags

  registry:
    type: string
    default: ""
    description: >
      Docker registry to use for pushing images.
      Default is Docker Hub.
      If you want to use GitHub Packages, set it to ghcr.io

steps:
  - run:
      name: Build docker image using << parameters.service >>
      command: docker-compose -f << parameters.file >> build --no-cache --pull << parameters.service >>
  - when:
      condition: << parameters.shorttag >>
      steps:
        - run:
            name: Build docker image using << parameters.service >> with short OS tags
            environment:
              OS9TAG: stream9
              OS10TAG: stream10
              RL8TAG: 8
              RL9TAG: 9
            command: docker-compose -f << parameters.file >> build << parameters.service >>
  - run:
      name: Login into Docker Hub
      command: |
        if [ -z "<< parameters.registry >>" ]; then
          docker login -u $DOCKER_USER -p $DOCKER_PASS
        else
          docker login << parameters.registry >> -u $DOCKER_USER -p $DOCKER_PASS
        fi
  - run:
      name: Push image into Docker Hub
      command: docker-compose -f << parameters.file >> push << parameters.service >>
  - when:
      condition: << parameters.shorttag >>
      steps:
        - run:
            name: Push image into Docker Hub with short OS tags
            environment:
              OS9TAG: stream9
              OS10TAG: stream10
              RL8TAG: 8
              RL9TAG: 9
            command: docker-compose -f << parameters.file >> push << parameters.service >>
